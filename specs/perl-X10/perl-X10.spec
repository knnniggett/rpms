#
#   - X10 -
#   This spec file was automatically generated by cpan2rpm [ver: 2.029]
#   The following arguments were used:
#       --no-sign http://search.cpan.org/CPAN/authors/id/R/RO/ROBF/X10-0.03.tar.gz
#   For more information on cpan2rpm please visit: http://perl.arix.com/
#

%define pkgname X10
%define filelist %{pkgname}-%{version}-filelist
%define NVR %{pkgname}-%{version}-%{release}
%define maketest 1
%define real_name X10

name:      perl-X10
summary:   X10 - Perl module
version:   0.03
release:   1%{?dist}
vendor:    robf@cpan.org
packager:  Arix International <cpan2rpm@arix.com>
license:   Artistic
group:     Applications/CPAN
url:       http://www.cpan.org
buildroot: %{_tmppath}/%{name}-%{version}-%(id -u -n)
buildarch: noarch
prefix:    %(echo %{_prefix})
source:    http://search.cpan.org/CPAN/authors/id/R/RO/ROBF/%{real_name}-%{version}.tar.gz

Requires: perl(Astro::SunTime)

%description
The 'X10' module is designed to set up all the other modules in a
relationship that would implement an X10 daemon process, with scheduler,
macro processor, network listener, etc.

The X10::Controller module is not designed to be used directly -- it's
an abstract class from which other controller modules are derived.

Derived from X10::Controller are several classes that implement the
specifics for several X10 controllers.  Currently implemented are
X10::ActiveHome, X10::TwoWay (for the two-way/TW523 combination),
X10::FireCracker, and X10::Network.  The first three are for actual
interfaces, and the last is for a 'virtual' X10 controller accessed
via a TCP socket.  The other end of X10::Network's TCP connection is
implemented in X10::Server.

A couple other modules written in support of an X10 server daemon are
X10::Scheduler and X10::MacroProc.  These modules implement an event
scheduler and macro processor, respectively.

The remaining modules are for general support of the other modules:
X10::Macro, X10::SchedEvent, X10::Event, X10::EventList...

X10::Device represents a physical device controlled via X10:  a light or
appliance, for example.

#
# This package was generated automatically with the cpan2rpm
# utility.  To get this software or for more information
# please visit: http://perl.arix.com/
#

%prep
%setup -q -n %{pkgname}-%{version} 
%{__chmod} -R u+w %{_builddir}/%{pkgname}-%{version}

%build
%{__grep} -rsl '^#!.*perl' . |
%{__grep} -v '.bak$' |xargs --no-run-if-empty \
%{__perl} -MExtUtils::MakeMaker -e 'MY->fixin(@ARGV)'
CFLAGS="$RPM_OPT_FLAGS"
%{__perl} Makefile.PL `%{__perl} -MExtUtils::MakeMaker -e ' print qq|PREFIX=%{buildroot}%{_prefix}| if \$ExtUtils::MakeMaker::VERSION =~ /5\.9[1-6]|6\.0[0-5]/ '`
%{__make} 
%if %maketest
%{__make} test
%endif

%install
[ "%{buildroot}" != "/" ] && %{__rm} -rf %{buildroot}

%{makeinstall} `%{__perl} -MExtUtils::MakeMaker -e ' print \$ExtUtils::MakeMaker::VERSION <= 6.05 ? qq|PREFIX=%{buildroot}%{_prefix}| : qq|DESTDIR=%{buildroot}| '`

cmd=/usr/share/spec-helper/compress_files
[ -x $cmd ] || cmd=/usr/lib/rpm/brp-compress
[ -x $cmd ] && $cmd

# SuSE Linux

if [ -e /etc/SuSE-release -o -e /etc/UnitedLinux-release ]
then
    %{__mkdir_p} %{buildroot}/var/adm/perl-modules
    fname=`find %{buildroot} -name "perllocal.pod" | head -1`
    if [ -f "$fname" ] ; then                             \
        %{__cat} `find %{buildroot} -name "perllocal.pod"`  \
        | %{__sed} -e s+%{buildroot}++g                     \
        < /dev/null                                         \
        > %{buildroot}/var/adm/perl-modules/%{name} ;      \
    fi
fi

# remove special files
find %{buildroot} -name "perllocal.pod" \
    -o -name ".packlist"                \
    -o -name "*.bs"                     \
    |xargs -i %{__rm} -f {}

# no empty directories
find %{buildroot}%{_prefix}             \
    -type d -depth                      \
    -exec rmdir {} \; 2>/dev/null

%{__perl} -MFile::Find -le '
    find({ wanted => \&wanted, no_chdir => 1}, "%{buildroot}");
    print "%doc  TODO Changes X10 README";
    for my $x (sort @dirs, @files) {
        push @ret, $x unless indirs($x);
        }
    print join "\n", sort @ret;

    sub wanted {
        return if /auto$/;

        local $_ = $File::Find::name;
        my $f = $_; s|^\Q%{buildroot}\E||;
        return unless length;
        return $files[@files] = $_ if -f $f;

        $d = $_;
        /\Q$d\E/ && return for reverse sort @INC;
        $d =~ /\Q$_\E/ && return
            for qw|/etc %{_prefix}/man %{_prefix}/bin %{_prefix}/share|;

        $dirs[@dirs] = $_;
        }

    sub indirs {
        my $x = shift;
        $x =~ /^\Q$_\E\// && $x ne $_ && return 1 for @dirs;
        }
    ' > %filelist

[ -z %filelist ] && {
    echo "ERROR: empty %files listing"
    exit -1
    }

%clean
[ "%{buildroot}" != "/" ] && %{__rm} -rf %{buildroot}

%files -f %filelist
%defattr(-,root,root)

%changelog
* Fri Aug 23 2013 Andrew Bauer <knnniggett@users.sourceforge.net>
- Initial build.
